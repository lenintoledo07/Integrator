import * as common from '@protocolink/common';
import * as core from '@protocolink/core';
export type DepositLogicTokenList = [common.Token, common.Token][];
export type DepositLogicParams = core.TokenToTokenExactInParams;
export type DepositLogicFields = core.TokenToTokenExactInFields<{
    referralCode?: number;
}>;
export type DepositLogicOptions = Pick<core.GlobalOptions, 'account'>;
export declare class DepositLogic extends core.Logic implements core.LogicTokenListInterface, core.LogicOracleInterface, core.LogicBuilderInterface {
    static id: string;
    static protocolId: string;
    static readonly supportedChainIds: number[];
    getTokenList(): Promise<DepositLogicTokenList>;
    quote(params: DepositLogicParams): Promise<{
        input: common.TokenAmount;
        output: common.TokenAmount;
    }>;
    build(fields: DepositLogicFields, options: DepositLogicOptions): Promise<{
        to: string;
        data: string;
        inputs: core.DataType.InputStruct[];
        wrapMode: number;
        approveTo: string;
        callback: string;
    }>;
}
